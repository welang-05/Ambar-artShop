<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="167.42607mm"
   height="209.5489mm"
   viewBox="0 0 167.42607 209.5489"
   version="1.1"
   id="svg23433"
   inkscape:version="1.2.1 (9c6d41e410, 2022-07-14)"
   sodipodi:docname="logo_00.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview23435"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="0.72515432"
     inkscape:cx="287.52501"
     inkscape:cy="464.03916"
     inkscape:window-width="1920"
     inkscape:window-height="1001"
     inkscape:window-x="-9"
     inkscape:window-y="41"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" />
  <defs
     id="defs23430">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient58016-0-6-5-8"
       gradientUnits="userSpaceOnUse"
       x="3655.1616"
       y="784.79816"
       gradientTransform="matrix(0.17321718,0,0,0.17321718,-614.68534,-110.09326)">
      <meshrow
         id="meshrow58293-03-1-9-1">
        <meshpatch
           id="meshpatch58295-9-2-9-9">
          <stop
             path="c 322.19,0  483.388,-2.27374e-13  966.569,0"
             style="stop-color:#7e5a05;stop-opacity:0.27377522"
             id="stop58297-9-9-3-8" />
          <stop
             path="c 169.247,262.896  0,806.497  0,1209.74"
             style="stop-color:#000000;stop-opacity:1"
             id="stop58299-8-0-70-6" />
          <stop
             path="c -231.375,74.3035  -644.379,0  -966.569,0"
             style="stop-color:#654c08;stop-opacity:0.8509804"
             id="stop58301-0-9-9-4" />
          <stop
             path="c 0,-403.248  0,-806.497  4.54747e-13,-1209.74"
             style="stop-color:#000000;stop-opacity:0.51585013"
             id="stop58303-6-3-2-1" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-18.449123,-25.847213)">
    <path
       style="fill:url(#meshgradient58016-0-6-5-8);fill-opacity:1;stroke:none;stroke-width:0.10536"
       d="m 93.485704,235.34774 c -2.53958,-0.2529 -7.35379,-1.4973 -11.20267,-2.8956 -5.52505,-2.0074 -12.72156,-5.5592 -17.54549,-8.6594 -0.80285,-0.5158 -1.89332,-1.2162 -2.42333,-1.5561 -0.52997,-0.34 -1.39031,-0.9346 -1.91182,-1.3213 -0.52154,-0.3866 -1.62955,-1.1989 -2.46215,-1.8051 -4.03194,-2.9352 -9.60168,-7.6066 -11.48988,-9.6363 -3.01258,-3.2386 -4.78179,-5.9934 -6.59741,-10.2727 -0.79174,-1.8662 -3.29323,-8.1922 -3.77051,-9.5352 -0.60443,-1.7011 -1.08949,-3.3948 -1.40533,-4.9076 -0.29002,-1.389 -0.29539,-1.4803 -0.30378,-5.1543 l -0.01,-3.7404 -0.48526,-1.2117 c -0.26685,-0.6664 -0.56414,-1.5909 -0.66061,-2.0545 -0.22868,-1.0987 -0.23283,-3.0912 -0.01,-4.286 0.2222,-1.1859 0.9167,-3.6386 1.31225,-4.6342 0.58096,-1.4626 1.82595,-3.646 2.80213,-4.9144 1.06991,-1.3901 5.95467,-6.3533 8.53824,-8.6754 0.86919,-0.7812 1.75873,-1.6545 1.97673,-1.9405 0.6404,-0.8402 0.66172,-1.0585 0.28894,-2.9579 -0.77507,-3.9495 -1.09297,-6.7312 -2.05724,-18.0022 -0.14874,-1.7383 -0.33779,-3.7535 -0.42015,-4.4779 -0.0824,-0.7243 -0.29461,-2.9526 -0.47169,-4.9518 -0.51376,-5.7997 -1.15282,-11.808 -1.31701,-12.382 -0.21206,-0.7414 -0.62536,-1.3211 -1.92738,-2.7032 -1.4388,-1.5273 -1.71975,-1.9206 -2.65998,-3.721699 -1.37068,-2.6261 -1.9103,-3.258 -4.38815,-5.1383 -1.31522,-0.9982 -2.39453,-2.1339 -3.98038,-4.188 -0.69261,-0.8972 -1.94353,-2.4562 -2.77973,-3.4643 -0.8362,-1.0081 -1.66202,-2.0608 -1.83511,-2.3394 -0.3543,-0.5699 -0.60136,-1.4818 -0.60386,-2.2282 0,-0.7145 -0.19836,-0.8721 -1.18868,-0.9557 -1.90778,-0.1613 -3.82621,-1.3283 -4.91969,-2.9928 -0.6874,-1.0462 -0.9297,-1.8443 -1.07732,-3.5488 -0.13222,-1.5263 0.006,-3.3069 0.30246,-3.9344 0.37431,-0.7888 2.9764,-2.8596 4.66333,-3.7111 0.32951,-0.1664 1.07005,-0.4676 1.64574,-0.6693 0.57563,-0.2017 1.26902,-0.4633 1.54078,-0.5812 1.8948,-0.8224 13.21925,-3.6999 21.42091,-5.4429 3.32403,-0.7064 6.20525,-1.5589 11.64243,-3.4447 1.99922,-0.6935 7.28571,-2.4872 11.7477,-3.9861 10.66561,-3.5829 14.14611,-4.7936 15.80417,-5.497 2.90888,-1.2344 3.29666,-1.2588 6.18754,-0.3891 2.35615,0.7088 3.50136,0.8763 5.98166,0.8751 3.780736,0 5.600076,-0.4295 14.908526,-3.5043 5.50596,-1.8188 16.11014,-5.6599 19.96592,-7.2321 3.06867,-1.2513 11.29796,-4.3083 14.27744,-5.3038 0.86862,-0.2902 2.55134,-0.7918 3.73924,-1.1146 1.18796,-0.3229 2.5155,-0.7089 2.95012,-0.8581 1.59552,-0.5474 10.23676,-2.7439 12.90673,-3.2808 0.81497,-0.1639 1.42212,-0.1873 4.31981,-0.1671 5.38939,0.037 6.43367,0.2033 7.40567,1.1764 1.09215,1.0934 3.55918,4.9439 4.45779,6.9578 0.98245,2.2016 1.49305,5.2206 1.50717,8.9107 0.006,1.652 -0.0261,2.1124 -0.18466,2.634 -0.41097,1.3519 -1.42892,2.6412 -2.89819,3.6708 -1.33596,0.9363 -2.20903,2.1066 -3.86394,5.1796 -0.56177,1.043 -1.18457,2.1677 -1.38411,2.4992 -0.51666,0.8586 -1.51025,2.9664 -2.13127,4.5212 -0.78907,1.9757 -1.09138,3.0668 -1.10539,3.9897 -0.0108,0.7294 0.0188,0.8463 0.39028,1.518 0.50351,0.9111 1.7152,2.5533 2.48741,3.3712 0.32303,0.3421 1.10878,1.0101 1.74625,1.4845 1.19594,0.8899 1.67552,1.3553 2.23101,2.1647 1.51062,2.2014 2.43954,6.0872 1.99014,8.3257 -0.19318,0.9625 -1.21477,3.5765 -2.52138,6.4523 -0.44235,0.9734 -0.80417,1.8336 -0.80417,1.9115 0,0.078 -0.0651,0.1666 -0.14456,0.1971 -0.0795,0.031 -0.24399,0.2608 -0.36551,0.5117 -0.59007,1.2186 -2.74721,3.5109 -4.94046,5.2497 -2.68848,2.1315 -3.20362,2.5802 -4.04022,3.518599 -1.32468,1.4858 -2.11209,2.0032 -3.57404,2.3483 -0.90464,0.2135 -2.13315,0.1393 -4.63586,-0.2803 -1.07205,-0.1797 -2.09142,-0.3129 -2.26527,-0.296 l -0.3161,0.031 0.0163,3.2134 c 0.01,1.8516 0.0864,4.0621 0.18204,5.2154 0.0913,1.101 0.26215,3.3294 0.37979,4.952 0.31999,4.4139 0.43616,5.0311 1.25942,6.6904 0.52991,1.0681 3.31992,5.2501 4.47472,6.7074 2.77601,3.5031 5.03795,6.0595 7.9116,8.9417 2.56797,2.5756 4.58287,4.3616 7.16455,6.3506 1.83811,1.4162 2.84873,2.4005 3.20032,3.1166 0.56746,1.1559 0.90973,5.0658 0.65184,7.4468 -0.21069,1.9449 -0.71697,4.3269 -1.43187,6.7366 -0.41298,1.3921 -1.9155,5.6973 -2.26138,6.4797 -0.12811,0.2897 -0.30443,0.7639 -0.3918,1.0536 -0.1852,0.6139 -1.16672,3.0947 -2.00093,5.0574 -0.89828,2.1133 -3.08494,6.381 -3.68084,7.1838 -0.13693,0.1844 -0.24899,0.3616 -0.24899,0.3938 0,0.1257 -2.05183,3.5039 -4.65832,7.6696 -0.17094,0.2732 -0.76136,1.0081 -1.31204,1.6331 -1.204,1.3665 -1.96389,2.4953 -3.44346,5.1154 -1.64651,2.9158 -3.39291,5.1838 -7.32069,9.5071 -1.75236,1.9289 -7.33146,7.5279 -8.92084,8.9529 -1.25113,1.1215 -5.59108,4.6182 -7.21724,5.8145 -3.5234,2.5925 -7.4822,4.9923 -11.74773,7.1219 -4.31223,2.1528 -9.55022,4.0887 -16.33095,6.0359 -5.19416,1.4915 -6.4414,1.7408 -9.69325,1.9377 -2.3847,0.1444 -9.580796,0.2256 -10.641386,0.1201 z m 4.59101,-2.3861 c 1.71617,-0.3256 4.412126,-1.2437 7.147976,-2.434 0.92376,-0.402 1.3307,-0.533 1.38456,-0.4457 0.10806,0.1748 0.38987,-0.041 1.55839,-1.1964 1.074,-1.0614 2.9184,-3.341 3.51567,-4.345 0.20681,-0.3477 0.68209,-1.2486 1.05625,-2.0019 1.548,-3.117 2.11197,-4.7642 2.88607,-8.4287 l 0.37837,-1.7915 0.0517,-4.4249 c 0.0575,-4.9222 -0.0286,-6.6134 -0.44771,-8.7977 -0.53124,-2.7684 -1.21828,-5.3222 -2.58516,-9.609 -2.0635,-6.4713 -2.21305,-7.5035 -1.62309,-11.1999 0.35088,-2.1983 0.39017,-3.8924 0.11371,-4.8992 -0.43079,-1.5681 -0.97605,-2.3426 -3.55869,-5.0551 -3.52833,-3.7055 -4.70436,-5.4559 -6.30166,-9.3794 -1.48279,-3.6421 -2.974666,-5.9032 -5.222646,-7.9151 -1.65663,-1.4828 -2.29745,-1.9186 -6.5635,-4.4649 -7.96442,-4.7535 -8.87755,-5.3391 -11.79022,-7.5604 -0.83973,-0.6403 -2.14926,-1.7437 -2.91012,-2.4516 -1.66539,-1.55 -5.59532,-5.6144 -6.77168,-7.0036 -2.39686,-2.8305 -7.12112,-9.4547 -9.20495,-12.9067 -0.7804,-1.2927 -1.00995,-1.6584 -1.65864,-2.6419 -0.24628,-0.3735 -0.44782,-0.709 -0.44782,-0.7456 0,-0.036 -0.25299,-0.4748 -0.56223,-0.9736 -0.30925,-0.4989 -0.86173,-1.4286 -1.22764,-2.0659 -0.36599,-0.6375 -1.18213,-2.0362 -1.81377,-3.1083 -1.60176,-2.7185 -3.88172,-7.292999 -3.95383,-7.932799 -0.0465,-0.4132 -0.0271,-0.496 0.11803,-0.496 0.19329,0 0.90012,1.0398 1.43244,2.107299 0.18781,0.3766 0.66203,1.2537 1.05383,1.9492 0.39176,0.6953 1.12462,1.9957 1.62862,2.8896 2.20911,3.9184 5.42724,8.2836 8.24494,11.1838 1.15327,1.187 1.54047,1.4757 1.7281,1.288 0.0788,-0.079 0.0471,-0.2387 -0.10759,-0.5415 -0.12061,-0.2364 -0.21928,-0.4554 -0.21928,-0.4866 0,-0.2419 0.76152,0.1152 2.42665,1.1387 2.94607,1.8104 5.65107,3.2442 8.46252,4.4858 5.54015,2.4465 14.88771,5.2557 20.89705,6.2805 2.87769,0.4906 5.784106,0.5334 7.247966,0.1069 1.16382,-0.3394 2.12395,-1.1874 3.58647,-3.1678 1.17201,-1.587 1.96446,-2.3497 3.00295,-2.89 1.10193,-0.5732 1.99229,-0.7722 3.47462,-0.7762 1.60625,-0.012 2.30859,0.1953 2.91823,0.8298 0.71472,0.7438 0.71135,1.0422 -0.0328,2.8387 -0.60081,1.4511 -0.53385,2.5541 0.20634,3.3971 0.85799,0.9771 2.45709,1.0339 4.74251,0.1684 1.03542,-0.3923 2.10276,-1.1474 3.13139,-2.2153 1.26581,-1.3141 1.857,-2.2467 2.48905,-3.9259 0.32199,-0.8553 0.46745,-2.5021 0.35095,-3.9718 -0.0712,-0.8992 -0.13704,-1.1669 -0.41458,-1.6877 -0.48561,-0.9111 -1.19297,-1.7621 -1.7128,-2.0605 -0.2517,-0.1446 -0.81322,-0.4798 -1.24785,-0.7449 -1.98088,-1.2084 -3.89848,-1.6887 -8.93244,-2.2373 -2.30768,-0.2515 -3.25385,-0.5327 -5.44934,-1.6195 -1.04307,-0.5163 -2.08093,-0.9966 -2.30635,-1.0674 -0.48126,-0.1513 -1.29613,-0.086 -2.7826,0.2209 -0.56209,0.1165 -1.38488,0.24 -1.82846,0.2749 -0.77578,0.061 -0.81738,0.053 -1.0924,-0.2225 -0.25437,-0.2545 -0.28081,-0.3467 -0.24015,-0.837 0.0323,-0.39 0.13964,-0.6879 0.36715,-1.0197 0.5291,-0.7712 0.98167,-1.7562 0.98167,-2.1365 0,-0.3836 -0.28603,-0.8702 -0.96632,-1.6435 -0.782386,-0.8893 -1.578026,-2.9575 -1.137816,-2.9575 0.17805,0 0.996336,0.6315 2.084806,1.609 1.00386,0.9014 2.11085,1.501 3.53225,1.9128 1.58103,0.4582 2.56352,0.5324 4.97754,0.3761 2.93988,-0.1906 4.62537,-0.088 6.94491,0.4244 1.4481,0.3198 2.965,0.523 3.89839,0.5227 1.40519,0 2.269,-0.5569 2.86116,-1.8423 0.26117,-0.5668 0.29565,-0.7767 0.33411,-2.0325 0.043,-1.396 0.042,-1.4023 -0.28875,-2.074 -0.52151,-1.059199 -1.69279,-1.999899 -2.87318,-2.307399 -0.65948,-0.1717 -1.19071,-0.1104 -2.51553,0.2887 -1.37942,0.416 -2.20846,0.5214 -3.61846,0.4607 -1.79304,-0.077 -3.17384,-0.5519 -4.78362,-1.6434 -0.78893,-0.5349 -1.52237,-0.9003 -2.22599,-1.1091 -0.78075,-0.2316 -2.28635,-0.2167 -3.58806,0.036 -2.28619,0.4433 -3.3743,0.3958 -6.081046,-0.2651 -2.94355,-0.7187 -4.98326,-1.602 -4.98326,-2.158 0,-0.061 0.35549,-0.2794 0.78991,-0.4857 0.64116,-0.3045 0.86443,-0.3625 1.18534,-0.3082 2.06963,0.3496 2.57846,0.1764 4.76977,-1.6242 1.335976,-1.0978 2.659026,-2.0339 3.515816,-2.4874 0.67247,-0.356 0.80761,-0.3878 1.8438,-0.4337 1.35271,-0.06 2.61469,0.1599 2.84312,0.4959 0.0795,0.1165 0.19974,0.2126 0.26721,0.2126 0.0675,0 0.80837,0.4052 1.64656,0.9003 2.50997,1.483 2.73159,1.5738 3.84349,1.5749 0.86494,0 1.01384,-0.031 1.66616,-0.3516 2.03689,-1.002 3.19686,-3.0395 3.10867,-5.4606 -0.0394,-1.0817 -0.17779,-1.3331 -0.95285,-1.7305 -0.47866,-0.2456 -0.73421,-0.2516 -1.20469,-0.029 -0.69558,0.3302 -1.40811,1.7992 -1.5794,3.2566 -0.0373,0.3194 -0.10482,0.6033 -0.14951,0.631 -0.0445,0.028 -0.22854,-0.1358 -0.40854,-0.3631 -0.42654,-0.5385 -0.56755,-1.313 -0.51012,-2.8012 0.0439,-1.1342 0.0573,-1.1874 0.63043,-2.4946 l 0.58561,-1.3357 -0.53528,-0.2302 c -0.98003,-0.4216 -2.77494,-0.8605 -5.17667,-1.266 -2.8962,-0.4888 -4.4235,-1.0015 -5.92022,-1.9876 -1.50269,-0.99 -2.55654,-2.2132 -3.899006,-4.5255 -0.28162,-0.485 -0.56996,-0.9045 -0.64069,-0.9319 -0.17294,-0.067 -2.1954,0.9997 -5.13938,2.7111 -1.33282,0.775 -2.77775,1.6131 -3.21098,1.8626 -0.97502,0.5617 -1.27173,0.5753 -1.76585,0.08 -0.35907,-0.359 -0.37049,-0.3941 -0.31579,-0.9745 0.0353,-0.374 0.38183,-1.4973 0.91528,-2.9658 0.47215,-1.3 0.9746,-2.8105 1.11653,-3.3567 0.37366,-1.4382 0.33325,-2.9407 -0.0861,-3.1998 -0.17257,-0.1068 -0.60166,-0.012 -1.97387,0.4635 -1.6046,0.549 -6.53535,2.5121 -7.7967,3.1043 -0.55054,0.2583 -1.47505,0.6587 -2.05454,0.8897 -0.57947,0.2309 -1.69367,0.6998 -2.47595,1.042 -4.43806,1.9409 -8.70595,3.3696 -12.09656,4.0497 -2.40753,0.4829 -3.74285,0.6174 -6.13092,0.6174 -3.65895,0 -5.88555,-0.3903 -10.74677,-1.8835 -1.0141,-0.3115 -1.96799,-0.5954 -2.11976,-0.6311 l -0.27596,-0.065 0.1444,0.8245 c 0.27044,1.544 0.87528,5.8763 1.08591,7.7782 0.40403,3.6477 0.54158,6.0521 0.69263,12.1052 0.16229,6.505399 0.20663,7.419499 0.68556,14.129699 0.16961,2.376 0.40402,6.0504 0.521,8.1655 0.91206,16.4924 1.65439,20.2867 6.68201,34.1563 0.98285,2.7112 1.5814,4.1273 2.90893,6.8818 1.66565,3.4561 2.44859,5.5216 2.88588,7.6134 0.44991,2.1522 0.53487,3.2199 0.69732,8.7702 0.13146,4.4892 0.34086,5.9982 1.22775,8.846 0.4197,1.3477 1.56641,4.5247 2.23653,6.1964 0.23855,0.5952 0.43375,1.1227 0.43375,1.1721 0,0.049 -0.20901,0.179 -0.4645,0.2877 l -0.46453,0.1975 0.50996,1.2343 c 0.75972,1.8389 1.07737,2.8381 0.94449,2.9711 -0.33417,0.3341 -0.92433,-0.4395 -4.13261,-5.417 -4.53427,-7.0347 -6.24963,-9.8257 -10.19845,-16.5943 -2.84203,-4.8715 -3.20714,-5.8107 -2.96515,-7.6286 0.0683,-0.5133 0.19258,-1.1269 0.2761,-1.3635 0.0836,-0.2366 0.39724,-1.4868 0.69723,-2.7783 0.47922,-2.063 0.55171,-2.527 0.59727,-3.823 0.0286,-0.8113 0,-2.0907 -0.067,-2.843 -0.13216,-1.5228 -0.52469,-4.172 -0.63655,-4.2969 -0.2157,-0.2407 -7.27877,6.5727 -8.87593,8.5622 -2.02097,2.5174 -3.43403,5.3635 -4.2061,8.4712 -0.62034,2.497 -0.53307,4.6576 0.2754,6.8189 0.25339,0.6774 0.51225,1.5158 0.57523,1.863 0.071,0.3915 0.1035,1.8676 0.0855,3.882 l -0.0292,3.2506 0.45211,1.7385 c 1.29691,4.9866 2.8666,9.1748 4.93017,13.1537 4.13838,7.9794 9.18349,13.5142 18.24463,20.0154 6.96047,4.9941 12.30582,7.7309 23.15336,11.8543 5.13923,1.9535 7.6293,2.6987 10.06199,3.0116 1.193,0.1535 3.38611,0.1277 4.32757,-0.05 z M 107.34121,77.034741 c 0.3182,-0.2611 0.74459,-0.5271 0.9475,-0.5912 0.77405,-0.2447 1.10887,-0.6198 0.55334,-0.6201 -0.41641,-1e-4 -1.53143,-0.5557 -1.79971,-0.8968 -0.28639,-0.3642 -0.29217,-0.7862 -0.0148,-1.0837 0.449,-0.4821 1.21307,-0.4271 1.91736,0.1378 0.24772,0.1986 0.59256,0.4399 0.76642,0.536 0.17386,0.096 0.79022,0.5187 1.36969,0.9391 2.08886,1.5154 2.92449,1.8384 4.76241,1.8411 1.62007,0 3.23307,-0.4039 4.40605,-1.1103 0.63605,-0.383 5.15037,-4.898 6.0413,-6.0424 0.89665,-1.1516 1.56594,-2.813 2.08369,-5.1729 0.1783,-0.8127 0.19647,-1.4238 0.19647,-6.6025 0,-3.1389 -0.0301,-5.7371 -0.0666,-5.7737 -0.0812,-0.08 -2.76635,0.5877 -5.20142,1.2959 -0.98515,0.2865 -3.54427,1.0287 -5.68698,1.6492 -2.14274,0.6205 -4.13404,1.2485 -4.42514,1.3954 -0.95834,0.484 -1.45787,0.8888 -3.21604,2.6066 -1.78467,1.7437 -3.5857,3.3259 -5.90023,5.1834 -2.87262,2.3053 -3.7947,3.7449 -3.79174,5.9199 0,1.0949 0.17795,1.8133 0.69763,2.8399 0.72971,1.4413 1.78002,2.3626 3.51559,3.083 0.3187,0.1325 0.71624,0.335 0.88345,0.4502 0.32644,0.2248 0.96571,0.4785 1.22447,0.486 0.0873,0.012 0.41919,-0.2089 0.73734,-0.4699 z m -46.991516,-3.3758 c 1.85766,-0.2123 4.09684,-0.6713 6.15261,-1.2613 3.14361,-0.9025 5.89297,-1.987 12.76699,-5.0365 5.60402,-2.4861 7.10553,-3.1015 11.05823,-4.5325 1.6819,-0.609 4.05254,-1.4948 5.26801,-1.9687 1.21547,-0.4737 3.18192,-1.2406 4.36983,-1.7043 6.271306,-2.4476 9.310746,-3.5302 13.538936,-4.8221 9.42738,-2.881 11.31259,-3.5706 15.27732,-5.5885 2.2129,-1.1262 4.22876,-2.2867 6.98973,-4.0236 1.00483,-0.6322 2.08541,-1.2638 2.40133,-1.4035 1.54836,-0.6847 3.86963,-1.2983 10.33624,-2.732 6.4083,-1.4209 7.66582,-1.8921 9.99748,-3.7453 1.21307,-0.9643 2.36123,-1.5369 3.51659,-1.7539 0.87001,-0.1633 1.40811,-0.1602 3.21349,0.019 l 0.63216,0.062 2.05453,-1.2286 c 1.13002,-0.6757 2.1419,-1.3066 2.24871,-1.4021 0.20552,-0.1836 2.1514,-2.9907 2.24839,-3.2433 0.0312,-0.082 0.0251,-0.3596 -0.0133,-0.6178 -0.0659,-0.4393 -0.0951,-0.4738 -0.45952,-0.5428 -0.92888,-0.1759 -3.4457,0.3596 -7.67318,1.6323 -1.34059,0.4038 -3.76811,1.0695 -5.39452,1.4795 -8.70604,2.1947 -14.45605,4.1121 -32.09992,10.7039 -8.96338,3.3488 -16.36062,5.9602 -19.8296,7.0005 -3.65312,1.0955 -6.28344,1.5288 -8.828556,1.4546 -1.84983,-0.054 -2.15269,-0.1338 -4.78287,-1.2636 -2.29466,-0.9855 -2.61447,-1.0141 -4.38352,-0.3912 -0.69539,0.2449 -4.6069,1.7848 -8.69229,3.422 -12.47677,5.0001 -18.88098,7.3027 -26.07683,9.3761 -4.41832,1.273 -6.62155,1.7745 -12.95936,2.9495 -5.24168,0.9719 -8.18795,1.5833 -10.90488,2.2628 -2.74245,0.686 -2.75519,0.6915 -1.84206,0.7854 0.40466,0.041 1.47065,0.1998 2.36891,0.3515 1.97795,0.334 3.65249,0.3556 6.83968,0.088 2.79923,-0.2348 3.66515,-0.3918 5.36726,-0.9725 1.5573,-0.5316 1.88318,-0.5435 2.42476,-0.088 0.46961,0.3952 0.59375,1.0621 0.38541,2.0706 -0.091,0.4409 -0.25938,1.0743 -0.37411,1.4077 -0.2625,0.7629 -0.26215,0.7688 0.0539,0.889 1.03599,0.394 6.00319,1.6225 8.06469,1.9947 2.96064,0.5346 4.54674,0.6221 6.73934,0.3715 z m 87.046456,-5.4184 c 0.98669,-0.3047 2.12712,-1.0338 5.09167,-3.2553 2.71043,-2.031 5.55015,-4.2774 6.38957,-5.0543 1.29077,-1.195 2.47764,-3.29 2.66669,-4.7072 0.15744,-1.1806 -0.65758,-3.3837 -1.72727,-4.6691 -1.15604,-1.3891 -4.02784,-2.8549 -6.51484,-3.3253 -0.44777,-0.084 -1.73797,-0.2571 -2.86707,-0.383 -3.07409,-0.343 -4.21672,-0.7002 -5.68099,-1.7762 -0.38224,-0.2809 -0.80919,-0.5701 -0.94883,-0.6428 -0.3805,-0.1981 -1.05757,-0.077 -2.86986,0.5124 -0.88965,0.2892 -1.80948,0.5757 -2.04405,0.6366 -0.23462,0.061 -0.77389,0.333 -1.19843,0.6045 l -0.77185,0.4939 0.0707,1.0092 c 0.086,1.227 0.55904,4.3526 1.0561,6.9772 0.7475,3.9471 1.90486,7.9151 2.90833,9.9712 0.71598,1.4672 1.6637,2.4818 2.88213,3.0855 1.51629,0.7514 2.39811,0.881 3.55803,0.5227 z m 35.23795,-27.0284 c 0.0778,-0.7853 0.20681,-1.5529 0.28684,-1.7056 0.0801,-0.1529 0.32983,-0.3824 0.55503,-0.5101 0.36337,-0.2064 0.40612,-0.2724 0.38009,-0.5887 -0.1095,-1.3299 -2.58877,-6.9394 -2.92047,-6.6077 -0.0369,0.036 0.0763,0.3501 0.25119,0.6965 0.69757,1.382 0.68208,3.0863 -0.0409,4.4837 -0.42419,0.82 -0.43948,0.6345 0.23146,2.8099 0.50555,1.6394 0.99211,2.9733 1.05976,2.9057 0.0306,-0.031 0.11923,-0.6982 0.1969,-1.4837 z"
       id="path57973-8-4-0-7" />
    <script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
  </g>
  <script
     id="script23967"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
